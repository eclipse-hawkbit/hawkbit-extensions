{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "uniqueSolutionPrefix": {
            "type": "string",
            "metadata": {
                "description": "Prefix used for resource names. Should be unique as this will also be used for domain names."
            }
        },
        "aks": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "AKS deployment enabled."
            }
        },
        "aksClusterName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional AKS cluster name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "vnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional virtual network name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "aksSubnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional subnet name for AKS nodes and pods. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "dnsLabelPrefix": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional DNS Label for the Public IP that will be used by Twin Reflector Proxy service. Otherwise calculated from uniqueSolutionPrefix. Must be lowercase. It should match with the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$ or it will raise an error."
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional IP address name that will be used by Twin Reflector Proxy service. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "servicePrincipalObjectId": {
            "type": "securestring",
            "metadata": {
                "description": "Object ID against which the Network Contributor roles will be assigned on the subnet"
            }
        },
        "servicePrincipalClientId": {
            "metadata": {
                "description": "Client ID (used by cloudprovider)"
            },
            "type": "securestring"
        },
        "servicePrincipalClientSecret": {
            "metadata": {
                "description": "The Service Principal Client Secret."
            },
            "type": "securestring"
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Storage SKU."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional Storage account name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "dbServerName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional Azure DB server name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "dbName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional Azure DB  name. Otherwise calculated from uniqueSolutionPrefix."
            }
        },
        "namespaceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Optional EventHub namespace name. Otherwise calculated from uniqueSolutionPrefix."
            }
        }
    },
    "variables": {
        "storageAccountName": "[if(empty(parameters('storageAccountName')),concat(parameters('uniqueSolutionPrefix'),'hawkbitstorage'),parameters('storageAccountName'))]",
        "dbServerName": "[if(empty(parameters('dbServerName')),concat(parameters('uniqueSolutionPrefix'),'hawkbitsqlserver'),parameters('dbServerName'))]",
        "dbName": "[if(empty(parameters('dbName')),concat(parameters('uniqueSolutionPrefix'),'hawkbitdb'),parameters('dbName'))]",
        "namespaceName": "[if(empty(parameters('namespaceName')),concat(parameters('uniqueSolutionPrefix'),'hawkbitns'),parameters('namespaceName'))]",
        "dnsLabelPrefix": "[if(empty(parameters('dnsLabelPrefix')),concat(parameters('uniqueSolutionPrefix'),'hawkbit'),parameters('dnsLabelPrefix'))]",
        "publicIPAddressName": "[if(empty(parameters('publicIPAddressName')),concat(parameters('uniqueSolutionPrefix'),'hawkbitpip'),parameters('publicIPAddressName'))]",
        "aksClusterName": "[if(empty(parameters('aksClusterName')),concat(parameters('uniqueSolutionPrefix'), 'hawkbitaks'),parameters('aksClusterName'))]",
        "vnetName": "[if(empty(parameters('vnetName')),concat(parameters('uniqueSolutionPrefix'), 'hawkbitvnet'),parameters('vnetName'))]",
        "aksSubnetName": "[if(empty(parameters('aksSubnetName')),concat(parameters('uniqueSolutionPrefix'), 'hawkbitakssubnet'),parameters('aksSubnetName'))]"
    },
    "resources": [{
            "name": "hawkBitStorageDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'hawkbitVnetDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hawkbit-extensions/master/hawkbit-extended-runtimes/hawkbit-update-server-azure/deployment/arm/templates/storageDeploy.json"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[variables('storageAccountName')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    }
                }
            }
        }, {
            "name": "hawkBitSQLServerDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'hawkbitVnetDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hawkbit-extensions/master/hawkbit-extended-runtimes/hawkbit-update-server-azure/deployment/arm/templates/sqlServerDeploy.json"
                },
                "parameters": {
                    "dbServerName": {
                        "value": "[variables('dbServerName')]"
                    },
                    "dbName": {
                        "value": "[variables('dbName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    }
                }
            }
        }, {
            "name": "hawkBitEventHubsDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'hawkbitVnetDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hawkbit-extensions/master/hawkbit-extended-runtimes/hawkbit-update-server-azure/deployment/arm/templates/ehNamespaceDeploy.json"
                },
                "parameters": {
                    "namespaceName": {
                        "value": "[variables('namespaceName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    }
                }
            }
        },
        {
            "name": "hawkbitVnetDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hawkbit-extensions/master/hawkbit-extended-runtimes/hawkbit-update-server-azure/deployment/arm/templates/vnetDeploy.json"
                },
                "parameters": {
                    "vnetName": {
                        "value": "[variables('vnetName')]"
                    },
                    "aksSubnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('aks')]",
            "name": "hawkBitKubernetesDeployment",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'hawkbitVnetDeployment')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/eclipse/hawkbit-extensions/master/hawkbit-extended-runtimes/hawkbit-update-server-azure/deployment/arm/templates/kubernetesDeploy.json"
                },
                "parameters": {
                    "clusterName": {
                        "value": "[variables('aksClusterName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('uniqueSolutionPrefix')]"
                    },
                    "servicePrincipalObjectId": {
                        "value": "[parameters('servicePrincipalObjectId')]"
                    },
                    "servicePrincipalClientId": {
                        "value": "[parameters('servicePrincipalClientId')]"
                    },
                    "servicePrincipalClientSecret": {
                        "value": "[parameters('servicePrincipalClientSecret')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('vnetName')]"
                    },
                    "subnetName": {
                        "value": "[variables('aksSubnetName')]"
                    },
                    "virtualNetworkResourceGroup": {
                        "value": "[resourceGroup().name]"
                    },
                    "publicIPAddressName": {
                        "value": "[variables('publicIPAddressName')]"
                    },
                    "dnsLabelPrefix": {
                        "value": "[variables('dnsLabelPrefix')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "aksClusterName": {
            "type": "string",
            "value": "[variables('aksClusterName')]"
        },
        "vnetName": {
            "type": "string",
            "value": "[variables('vnetName')]"
        },
        "publicIPAddressName": {
            "type": "string",
            "value": "[variables('publicIPAddressName')]"
        },
        "publicIPAddress": {
            "type": "string",
            "value": "[reference('hawkBitKubernetesDeployment').outputs.ipAddress.value]"
        },
        "publicIPFQDN": {
            "type": "string",
            "value": "[reference('hawkBitKubernetesDeployment').outputs.ipFQDN.value]"
        },
        "dbAdministratorLogin": {
            "type": "string",
            "value": "[reference('hawkBitSQLServerDeployment').outputs.administratorLogin.value]"
        },
        "dbAdministratorLoginPassword": {
            "type": "string",
            "value": "[reference('hawkBitSQLServerDeployment').outputs.administratorLoginPassword.value]"
        },
        "dbUri": {
            "type": "string",
            "value": "[concat('jdbc:sqlserver://', variables('dbServerName'), '.database.windows.net:1433;database=', variables('dbName'), ';user=', reference('hawkBitSQLServerDeployment').outputs.administratorLogin.value, '@', variables('dbServerName'), ';password=',reference('hawkBitSQLServerDeployment').outputs.administratorLoginPassword.value, ';encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;')]"
        },
        "storageKey": {
            "type": "string",
            "value": "[reference('hawkBitStorageDeployment').outputs.storageKey.value]"
        },
        "storageConnectionString": {
            "type": "string",
            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=', reference('hawkBitStorageDeployment').outputs.storageKey.value)]"
        },
        "ehNamespaceConnectionString": {
            "type": "string",
            "value": "[reference('hawkBitEventHubsDeployment').outputs.namespaceConnectionString.value]"
        },
        "ehNamespaceName": {
            "type": "string",
            "value": "[variables('namespaceName')]"
        }
    }
}